name: Board Game CICD Pipeline

on:
  push:
    branches: [ "main" ]

jobs:
  build:

    runs-on: [ gcp-ce ]

    steps:
    - name: Checkout Source Code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Cache Maven Local Repository
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Build with Maven
      run: mvn package --file pom.xml
    
    - name: Upload the Build Artifact
      uses: actions/upload-artifact@v4
      with:
        name: board-game-artifact
        path: target/*.jar
    
    - name: Trivy File Scan
      run: |
        trivy fs --format table -o trivy-fs-report.html .
    
    - name: Upload Trivy Scan Report
      uses: actions/upload-artifact@v4
      with:
        name: Trivy File Scan Report
        path: trivy-fs-report.html

    - name: Cache Sonarqube Report
      uses: actions/cache@v3
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
    
    - name: Sonarqube Scan
      uses: sonarsource/sonarqube-scan-action@master
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
    
    - name: SonarQube Quality Gate check
      id: sonarqube-quality-gate-check
      uses: sonarsource/sonarqube-quality-gate-action@master
      timeout-minutes: 5
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
    
    - name: "SonarQube Quality Gate Status value"
      run: echo "The Quality Gate status is ${{ steps.sonarqube-quality-gate-check.outputs.quality-gate-status }}"

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker Image
      run: |
        docker build -t blazerrt86899/boardgame:latest
    
    - name: Trivy Image Scan
      run: |
        trivy image --format table -o trivy-image-report.html blazerrt86899/boardgame:latest
    
    - name: Upload Trivy Image Scan Report
      uses: actions/upload-artifact@v4
      with:
        name: Trivy Image Scan Report
        path: trivy-image-report.html

    - name: Login into Docker hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}

    - name: Push to Docker Hub
      run: |
        docker push blazerrt86899/boardgame:latest

  deploy:
    runs-on: [gcp-ce]
    needs: [build]

    steps:
      - name: Pull Docker Image
        run: |
          docker pull blazerrt86899/boardgame:latest
      
      - name: Update GKE cluster config
        run: |
          gcloud container clusters get-credentials ${{ secrets.GKE_CLUSTER_NAME }} --region ${{ secrets.GCLOUD_REGION }} --project ${{ secrets.GCLOUD_PROJECT_ID }}
      
      - name: Deploy to GKE Cluster
        run: |
          kubectl create ns webapps
          kubectl apply -f deployment-service.yaml -n webapps
